name: "Deploy dev&prod"
on:
  push:
    branches:
      - "main"
      - "dev-*"

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"

    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-node@v4"
        with:
          node-version: 20
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"

      - name: "Install dependencies"
        run: "npm ci"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: "Build application"
        run: "npm run build"
        env:
          ASTRO_KEY: ${{ secrets.ASTRO_KEY }}

      - name: "Upload to cdn"
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: min-side
          source: ./dist/client/_astro
          destination: 'tms-microfrontend-template-ssr'

      - name: "Build and push"
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: min-side

    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  update-manifest-dev:
    uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest-v3.yaml@main
    needs: build
    with:
      id: "tms-microfrontend-template-ssr"
      url: "http://tms-microfrontend-template-ssr"
      appname: "tms-microfrontend-template-ssr"
      namespace: "min-side"
      cluster: dev-gcp
      commitmsg: ${{ github.event.head_commit.message}}
      fallback: "http://tms-microfrontend-template-ssr/fallback"
      ssr: true
    secrets: inherit

  # update-manifest-prod:
  #   if: github.ref == 'refs/heads/main'
  #   uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest-v3.yaml@main
  #   needs: build
  #   with:
  #     id: "tms-microfrontend-template-ssr-id"
  #     url: "http://tms-microfrontend-template-ssr"
  #     appname: "tms-microfrontend-template-ssr"
  #     namespace: "team-namespace"
  #     cluster: prod-gcp
  #     commitmsg: ${{ github.event.head_commit.message}}
  #     fallback: "http://tms-microfrontend-template-ssr/fallback"
  #     ssr: true
  #   secrets: inherit

  deploy-dev:
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
      id-token: "write"
    needs: [build, update-manifest-dev]
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to dev"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp/nais.yaml
          VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}

  # deploy-prod:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: "ubuntu-latest"
  #   permissions:
  #     contents: "read"
  #     id-token: "write"
  #   needs: [build, update-manifest-prod]

  #   steps:
  #     - uses: "actions/checkout@v4"
  #     - name: "Deploy to prod"
  #       uses: "nais/deploy/actions/deploy@v2"
  #       env:
  #         CLUSTER: prod-gcp
  #         RESOURCE: nais/prod-gcp/nais.yaml
  #         VAR: image=${{ needs.build.outputs.image }},version=${{ github.sha }}          
